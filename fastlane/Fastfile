default_platform(:ios)
platform :ios do
  desc "Generate Fastlane.js code"
  lane :codegen do
    actionsArr = []
    out = []
    ActionsList.all_actions do |action|
      options = action.available_options || [] 
      optionArr = []
      options.each do | option |
          thisdic = {
            "allow_shell_conversion" => (option.respond_to? :allow_shell_conversion) ? option.allow_shell_conversion : nil,"code_gen_default_value" => (option.respond_to? :code_gen_default_value) ? option.code_gen_default_value : nil,"code_gen_sensitive" => (option.respond_to? :code_gen_sensitive) ? option.code_gen_sensitive : nil,"conflict_block" => (option.respond_to? :conflict_block) ? option.conflict_block : nil,"conflicting_options" => (option.respond_to? :conflicting_options) ? option.conflicting_options : nil,"data_type" => (option.respond_to? :data_type) ? option.data_type : nil,"default_value" => (option.respond_to? :default_value) ? option.default_value : nil,"default_value_dynamic" => (option.respond_to? :default_value_dynamic) ? option.default_value_dynamic : nil,"deprecated" => (option.respond_to? :deprecated) ? option.deprecated : nil,"description" => (option.respond_to? :description) ? option.description : nil,"display_in_shell" => (option.respond_to? :display_in_shell) ? option.display_in_shell : nil,"env_name" => (option.respond_to? :env_name) ? option.env_name : nil,"is_string" => (option.respond_to? :is_string) ? option.is_string : nil,"key" => (option.respond_to? :key) ? option.key : nil,"optional" => (option.respond_to? :optional) ? option.optional : nil,"sensitive" => (option.respond_to? :sensitive) ? option.sensitive : nil,"short_option" => (option.respond_to? :short_option) ? option.short_option : nil,"skip_type_validation" => (option.respond_to? :skip_type_validation) ? option.skip_type_validation : nil,"verify_block" => (option.respond_to? :verify_block) ? option.verify_block : nil,
          }
        optionArr << thisdic
      end
      actionObj = {
        "action_name" => (action.respond_to? :action_name) ? action.action_name : nil,"description" => (action.respond_to? :description) ? action.description : nil,"details" => (action.respond_to? :details) ? action.details : nil,"name" => (action.respond_to? :name) ? action.name : nil,"return_type" => (action.respond_to? :return_type) ? action.return_type : nil,"return_value" => (action.respond_to? :return_value) ? action.return_value : nil,"sample_return_value" => (action.respond_to? :sample_return_value) ? action.sample_return_value : nil,
        "options" => optionArr
      }
      actionsArr << actionObj
     end
     File.write("/var/folders/mt/jf_sg7yd3sv6gld8pfh0n4dw0000gn/T/tmp-6309-l2WIDKrWQijZ", JSON.generate(actionsArr))
 end
end
